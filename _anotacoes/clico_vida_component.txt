
Ciclo de Vida de um Componente Angular (Lifecycle Hooks)

No Angular, os componentes passam por diversas fases desde sua cria√ß√£o at√© a destrui√ß√£o.
Essas fases s√£o chamadas de hooks do ciclo de vida (lifecycle hooks).

-----------------------------------------------------
‚úÖ Lista de Lifecycle Hooks do Angular
-----------------------------------------------------

1. ngOnChanges(changes: SimpleChanges)
- Chamado sempre que um ou mais inputs com @Input() mudam.
- Executado antes do ngOnInit e a cada mudan√ßa subsequente de input.

2. ngOnInit()
- Executado uma vez ap√≥s o primeiro ngOnChanges.
- Usado para inicializa√ß√£o, chamadas a servi√ßos, etc.

3. ngDoCheck()
- Chamado em toda detec√ß√£o de mudan√ßa.
- √ötil para l√≥gica personalizada que n√£o √© coberta por ngOnChanges.

4. ngAfterContentInit()
- Chamado uma vez ap√≥s a proje√ß√£o de conte√∫do externo (ng-content).

5. ngAfterContentChecked()
- Chamado ap√≥s cada verifica√ß√£o de mudan√ßa no conte√∫do projetado.

6. ngAfterViewInit()
- Chamado uma vez depois que a view e suas subviews foram inicializadas.
- Ideal para l√≥gicas que usam @ViewChild.

7. ngAfterViewChecked()
- Chamado ap√≥s cada verifica√ß√£o de mudan√ßa nas views do componente e seus filhos.

8. ngOnDestroy()
- Chamado antes da destrui√ß√£o do componente.
- Ideal para limpar subscri√ß√µes, timeouts, handlers, etc.

-----------------------------------------------------
üß† Exemplo pr√°tico com todos os hooks
-----------------------------------------------------

import {
  Component, OnInit, OnChanges, DoCheck,
  AfterContentInit, AfterContentChecked,
  AfterViewInit, AfterViewChecked, OnDestroy,
  SimpleChanges
} from '@angular/core';

@Component({
  selector: 'app-demo',
  templateUrl: './demo.component.html'
})
export class DemoComponent implements
  OnInit, OnChanges, DoCheck,
  AfterContentInit, AfterContentChecked,
  AfterViewInit, AfterViewChecked, OnDestroy {

  constructor() {
    console.log('Constructor');
  }

  ngOnChanges(changes: SimpleChanges) {
    console.log('ngOnChanges', changes);
  }

  ngOnInit() {
    console.log('ngOnInit');
  }

  ngDoCheck() {
    console.log('ngDoCheck');
  }

  ngAfterContentInit() {
    console.log('ngAfterContentInit');
  }

  ngAfterContentChecked() {
    console.log('ngAfterContentChecked');
  }

  ngAfterViewInit() {
    console.log('ngAfterViewInit');
  }

  ngAfterViewChecked() {
    console.log('ngAfterViewChecked');
  }

  ngOnDestroy() {
    console.log('ngOnDestroy');
  }
}

-----------------------------------------------------
Esses hooks ajudam a controlar o comportamento do componente em momentos espec√≠ficos do seu ciclo de vida.
